{"ast":null,"code":"import React,{useState}from'react';import{Container,Button,Alert}from'react-bootstrap';import{Controlled as CodeMirror}from'react-codemirror2';import'codemirror/lib/codemirror.css';import'codemirror/mode/clike/clike';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CodeEditorPage=()=>{const[code,setCode]=useState('');const[output,setOutput]=useState('');const[error,setError]=useState('');const runCode=async()=>{console.log(\"Running code:\",code);// Debug log\ntry{const response=await fetch('http://127.0.0.1:5000/run',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({code})});const data=await response.json();console.log(\"Response:\",data);// Debug log\nif(data.error){setError(data.error);setOutput('');}else{setOutput(data.output);setError('');}}catch(err){setError('Error running the code.');setOutput('');}};return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Code Editor\"}),/*#__PURE__*/_jsx(CodeMirror,{value:code,options:{mode:'text/x-c++src',lineNumbers:true,theme:'default'},onBeforeChange:(editor,data,value)=>setCode(value)}),/*#__PURE__*/_jsx(Button,{className:\"mt-3\",onClick:runCode,children:\"Run Code\"}),output&&/*#__PURE__*/_jsx(Alert,{variant:\"success\",className:\"mt-3\",children:output}),error&&/*#__PURE__*/_jsx(Alert,{variant:\"danger\",className:\"mt-3\",children:error})]});};export default CodeEditorPage;","map":{"version":3,"names":["React","useState","Container","Button","Alert","Controlled","CodeMirror","jsx","_jsx","jsxs","_jsxs","CodeEditorPage","code","setCode","output","setOutput","error","setError","runCode","console","log","response","fetch","method","headers","body","JSON","stringify","data","json","err","children","value","options","mode","lineNumbers","theme","onBeforeChange","editor","className","onClick","variant"],"sources":["C:/Users/Best Center/Contacts/Desktop/my-ai-website/frontend/src/components/CodeEditorPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Container, Button, Alert } from 'react-bootstrap';\r\nimport { Controlled as CodeMirror } from 'react-codemirror2';\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/mode/clike/clike';\r\n\r\nconst CodeEditorPage = () => {\r\n    const [code, setCode] = useState('');\r\n    const [output, setOutput] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const runCode = async () => {\r\n        console.log(\"Running code:\", code); // Debug log\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:5000/run', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ code }),\r\n            });\r\n            const data = await response.json();\r\n            console.log(\"Response:\", data); // Debug log\r\n            if (data.error) {\r\n                setError(data.error);\r\n                setOutput('');\r\n            } else {\r\n                setOutput(data.output);\r\n                setError('');\r\n            }\r\n        } catch (err) {\r\n            setError('Error running the code.');\r\n            setOutput('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <h2>Code Editor</h2>\r\n            <CodeMirror\r\n                value={code}\r\n                options={{\r\n                    mode: 'text/x-c++src',\r\n                    lineNumbers: true,\r\n                    theme: 'default',\r\n                }}\r\n                onBeforeChange={(editor, data, value) => setCode(value)}\r\n            />\r\n            <Button className=\"mt-3\" onClick={runCode}>Run Code</Button>\r\n            {output && <Alert variant=\"success\" className=\"mt-3\">{output}</Alert>}\r\n            {error && <Alert variant=\"danger\" className=\"mt-3\">{error}</Alert>}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default CodeEditorPage;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,SAAS,CAAEC,MAAM,CAAEC,KAAK,KAAQ,iBAAiB,CAC1D,OAASC,UAAU,GAAI,CAAAC,UAAU,KAAQ,mBAAmB,CAC5D,MAAO,+BAA+B,CACtC,MAAO,6BAA6B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAErC,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CACzB,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAACa,MAAM,CAAEC,SAAS,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACe,KAAK,CAAEC,QAAQ,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CAEtC,KAAM,CAAAiB,OAAO,CAAG,KAAAA,CAAA,GAAY,CACxBC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAER,IAAI,CAAC,CAAE;AACpC,GAAI,CACA,KAAM,CAAAS,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,2BAA2B,CAAE,CACtDC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEf,IAAK,CAAC,CACjC,CAAC,CAAC,CACF,KAAM,CAAAgB,IAAI,CAAG,KAAM,CAAAP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAClCV,OAAO,CAACC,GAAG,CAAC,WAAW,CAAEQ,IAAI,CAAC,CAAE;AAChC,GAAIA,IAAI,CAACZ,KAAK,CAAE,CACZC,QAAQ,CAACW,IAAI,CAACZ,KAAK,CAAC,CACpBD,SAAS,CAAC,EAAE,CAAC,CACjB,CAAC,IAAM,CACHA,SAAS,CAACa,IAAI,CAACd,MAAM,CAAC,CACtBG,QAAQ,CAAC,EAAE,CAAC,CAChB,CACJ,CAAE,MAAOa,GAAG,CAAE,CACVb,QAAQ,CAAC,yBAAyB,CAAC,CACnCF,SAAS,CAAC,EAAE,CAAC,CACjB,CACJ,CAAC,CAED,mBACIL,KAAA,CAACR,SAAS,EAAA6B,QAAA,eACNvB,IAAA,OAAAuB,QAAA,CAAI,aAAW,CAAI,CAAC,cACpBvB,IAAA,CAACF,UAAU,EACP0B,KAAK,CAAEpB,IAAK,CACZqB,OAAO,CAAE,CACLC,IAAI,CAAE,eAAe,CACrBC,WAAW,CAAE,IAAI,CACjBC,KAAK,CAAE,SACX,CAAE,CACFC,cAAc,CAAEA,CAACC,MAAM,CAAEV,IAAI,CAAEI,KAAK,GAAKnB,OAAO,CAACmB,KAAK,CAAE,CAC3D,CAAC,cACFxB,IAAA,CAACL,MAAM,EAACoC,SAAS,CAAC,MAAM,CAACC,OAAO,CAAEtB,OAAQ,CAAAa,QAAA,CAAC,UAAQ,CAAQ,CAAC,CAC3DjB,MAAM,eAAIN,IAAA,CAACJ,KAAK,EAACqC,OAAO,CAAC,SAAS,CAACF,SAAS,CAAC,MAAM,CAAAR,QAAA,CAAEjB,MAAM,CAAQ,CAAC,CACpEE,KAAK,eAAIR,IAAA,CAACJ,KAAK,EAACqC,OAAO,CAAC,QAAQ,CAACF,SAAS,CAAC,MAAM,CAAAR,QAAA,CAAEf,KAAK,CAAQ,CAAC,EAC3D,CAAC,CAEpB,CAAC,CAED,cAAe,CAAAL,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module"}